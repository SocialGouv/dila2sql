---

image: docker:latest

variables:
  DOCKER_VERSION: "18.06"
  DOCKER_HOST: tcp://localhost:2375
  CONTAINER_IMAGE: socialgouv/dila2sql
  PREVIOUS_CI_IMAGE_DILA2SQL: "$CI_REGISTRY_IMAGE/dila2sql_ci:$CI_COMMIT_BEFORE_SHA"
  CI_IMAGE_DILA2SQL: "$CI_REGISTRY_IMAGE/dila2sql_ci:$CI_COMMIT_SHA"
  PUBLIC_IMAGE_DILA2SQL: "$CI_REGISTRY_IMAGE/dila2sql:$CI_COMMIT_SHA"
  PUBLIC_IMAGE_DILA2SQL_API: "$CI_REGISTRY_IMAGE/dila2sql_api:$CI_COMMIT_SHA"
  IMAGE_INFRA_BASE_NAME: "infra/images-docker"
  API_PORT: 8080
  DOCKER_DRIVER: overlay2

services:
  - docker:dind

stages:
  - "Prepare"
  - "Run Tests"
  - "Publish Docker images"
  - "Deploy"
  - "Send Url"




###########################################
###               PREPARE               ###
###########################################

build-ci-docker-image-dila2sql:
  stage: "Prepare"
  image: docker:$DOCKER_VERSION
  services:
  - docker:dind
  before_script:
  - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN
  script:
  - docker pull $PREVIOUS_CI_IMAGE_DILA2SQL || true
  - >-
    docker build
    --cache-from $PREVIOUS_CI_IMAGE_DILA2SQL
    -t $CI_IMAGE_DILA2SQL
    packages/dila2sql
  - docker push $CI_IMAGE_DILA2SQL

prepare-deploy-id:
  stage: "Prepare"
  image:
    name: $CI_REGISTRY/$IMAGE_INFRA_BASE_NAME/docker-kube:latest
    entrypoint: [""]
  before_script:
  - envsubst < k8s/scripts/get-deploy-id.sh > k8s/scripts/get-github-deploy-id.sh
  script:
  - sh k8s/scripts/get-github-deploy-id.sh
  environment:
    name: dev.factory
  except:
  - ops/deploy-k8s
  artifacts:
    paths:
    - github_deploy_id

prepare-deploy-id-prod:
  stage: "Prepare"
  image:
    name: $CI_REGISTRY/$IMAGE_INFRA_BASE_NAME/docker-kube:latest
    entrypoint: [""]
  before_script:
  - envsubst < k8s/scripts/get-deploy-id.sh > k8s/scripts/get-github-deploy-id.sh
  script:
  - sh k8s/scripts/get-github-deploy-id.sh
  environment:
    name: incubateur
  only:
  - ops/deploy-k8s
  artifacts:
    paths:
    - github_deploy_id

###########################################
###              RUN TESTS              ###
###########################################

run-tests-dila2sql:
  stage: "Run Tests"
  image: docker:$DOCKER_VERSION
  services:
  - docker:dind
  script:
  - docker run -t $CI_IMAGE_DILA2SQL tox

###########################################
###           PUBLISH IMAGES            ###
###########################################

publish-docker-image-dila2sql:
  stage: "Publish Docker images"
  image: docker:$DOCKER_VERSION
  services:
  - docker:dind
  before_script:
  - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN
  script:
  - docker pull $CI_IMAGE_DILA2SQL || true
  - >-
    docker build
    --cache-from $CI_IMAGE_DILA2SQL
    -t $PUBLIC_IMAGE_DILA2SQL
    packages/dila2sql
  - docker push $PUBLIC_IMAGE_DILA2SQL

publish-docker-image-dila2sql-api:
  stage: "Publish Docker images"
  image: docker:$DOCKER_VERSION
  services:
  - docker:dind
  before_script:
  - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN
  script:
  - docker pull $PUBLIC_IMAGE_DILA2SQL_API || true
  - >-
    docker build
    --cache-from $PUBLIC_IMAGE_DILA2SQL_API
    -t $PUBLIC_IMAGE_DILA2SQL_API
    packages/api
  - docker push $PUBLIC_IMAGE_DILA2SQL_API

############################################
###                 DEPLOY               ###
############################################

#

.deploy_stage: &deploy_stage
  stage: "Deploy"
  image:
    name: $CI_REGISTRY/$IMAGE_INFRA_BASE_NAME/docker-kube:latest
    entrypoint: [""]
  variables:
    ENVIRONMENT: $CI_ENVIRONMENT_NAME
  allow_failure: false

.deploy_dila2sql: &deploy_dila2sql
  before_script:
  - envsubst < k8s/dila2sql/importer.yml > k8s/dila2sql/importer-dila2sql.yml
  script:
  - kubectl apply -f k8s/dila2sql/importer-dila2sql.yml

.deploy_dila2api: &deploy_dila2sql_api
  variables:
    DILA2SQL_API_DB_PORT: $API_PORT
  before_script:
  - envsubst < k8s/api/deployment.yml > k8s/api/deployment-api.yml
  - envsubst < k8s/api/ingress.yml > k8s/api/ingress-api.yml
  - envsubst < k8s/api/service.yml > k8s/api/service-api.yml
  script:
  - kubectl apply -f k8s/api/deployment-api.yml
  - kubectl apply -f k8s/api/ingress-api.yml
  - kubectl apply -f k8s/api/service-api.yml

#

Deploy Postgres to dev environment:
  <<: *deploy_stage
  before_script:
  - envsubst < k8s/postgres/deployment.yml > k8s/postgres/deployment-postgres.yml
  - envsubst < k8s/postgres/service.yml > k8s/postgres/service-postgres.yml
  script:
  - kubectl apply -f k8s/postgres/deployment-postgres.yml
  - kubectl apply -f k8s/postgres/service-postgres.yml
  environment:
    name: dev.factory
  except:
  - ops/deploy-k8s

Deploy dila2sql to dev environment:
  <<: *deploy_stage
  <<: *deploy_dila2sql
  environment:
    name: dev.factory
  except:
  - ops/deploy-k8s

Deploy dila2sql api to dev environment:
  <<: *deploy_stage
  <<: *deploy_dila2sql_api
  environment:
    name: dev.factory
  except:
  - ops/deploy-k8s

Deploy dila2sql to prod environment:
  <<: *deploy_stage
  <<: *deploy_dila2sql
  environment:
    name: incubateur
  only:
  - ops/deploy-k8s

Deploy dila2sql api to prod environment:
  <<: *deploy_stage
  <<: *deploy_dila2sql_api
  environment:
    name: incubateur
  only:
  - ops/deploy-k8s

###########################################
###         SEND URL TO GITHUB          ###
###########################################

send-url:
  stage: "Send Url"
  image:
    name: $CI_REGISTRY/$IMAGE_INFRA_BASE_NAME/docker-kube:latest
    entrypoint: [""]
  variables:
    URL: http://dila2sql-api.$CI_ENVIRONMENT_NAME.social.gouv.fr/
  before_script:
  - export DEPLOY_ID=$(cat github_deploy_id)
  - envsubst < k8s/scripts/send-url.sh > k8s/scripts/send-url-to-github.sh
  script:
  - sh k8s/scripts/send-url-to-github.sh $CI_COMMIT_REF_NAME
  environment:
    name: dev.factory
  except:
  - ops/deploy-k8s

send-url-prod:
  stage: "Send Url"
  image:
    name: $CI_REGISTRY/$IMAGE_INFRA_BASE_NAME/docker-kube:latest
    entrypoint: [""]
  variables:
    URL: https://dila2sql-api.$CI_ENVIRONMENT_NAME.social.gouv.fr/
  before_script:
  - export DEPLOY_ID=$(cat github_deploy_id)
  - envsubst < k8s/scripts/send-url.sh > k8s/scripts/send-url-to-github.sh
  script:
  - sh k8s/scripts/send-url-to-github.sh $CI_COMMIT_REF_NAME
  environment:
    name: incubateur
  only:
  - ops/deploy-k8s